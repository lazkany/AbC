{"name":"AbC","tagline":"The Implementation of AbC Linguistic Primitives ","body":"### Attribute-based Communication.\r\nAbC is a process calculus for attribute-based communication. An AbC system consists of a set of parallel agents each of which is equipped with a set of attributes. Communication takes place in an implicit multicast fashion, and interactions among agents are dynamically established by taking into account \"connections\" as determined by predicates over the attributes of agents.\r\n\r\nIn this page, we present a prototype implementation for AbC linguistic primitives and show how one can exploit these flexible primitives to model different communication models and interaction patterns. In the following sections, we show how to program with AbC primitives naturally and easily. \r\n\r\n\r\n### Getting Started\r\nIn this implementation we consider a message broker. In essence, it accepts messages from sending components, and delivers them to all registered components except for the sending one. This message broker has the exact role of a forwarder and it does not contribute anything to message filtering. Deciding to accept a message or not is carried out when the message is delivered to the component. This implies that you alway have to start the forwarding server/message broker so that your program functions in the expected way. This task is very easy, all you need to do is to create an instance of the class \"ServerPort\". This class is responsible for forwarding messages. It accepts messages at port number 9998 and it accepts registration at port number 9999. In the code snippet below we show how to instantiate this class and the required classed to be imported.\r\n\r\n    `\timport java.io.IOException;\r\n\timport org.sysma.abc.core.centralized.ServerPort;\r\n\timport org.sysma.abc.core.exceptions.DuplicateNameException;\r\n\r\n\t/**\r\n\t * @author Yehia Abd Alrahman\r\n\t *\r\n\t */\r\n\tpublic class MainServer {\r\n\r\n\t\tpublic static void main(String[] args) throws IOException, DuplicateNameException {\r\n\t\t\t// TODO Auto-generated method stub\r\n\t\t\tServerPort srvr=new ServerPort();\r\n\t\t\r\n\t\t}\r\n\r\n\t}\r\n`\r\n\r\n### Attribute-based Interaction\r\nIn this page, we present a prototype implementation for AbC linguistic primitives and show how one can exploit these flexible primitives to model different communication models and interaction patterns. In the following sections, we show how to program with AbC primitives naturally and easily.\r\n  ![](https://dl.dropboxusercontent.com/s/e1w8f2qxge2m3rt/attribute.png?dl=0) \r\n\r\n\r\nIn this page, we present a prototype implementation for AbC linguistic primitives and show how one can exploit these flexible primitives to model different communication models and interaction patterns. In the following sections, we show how to program with AbC primitives naturally and easily.\r\n\r\n[Source Code](https://github.com/lazkany/AbC/tree/master/org.sysma.abc.core/src/org/sysma/abc/core/Examples/AttributeBased)            \r\n[Video Demo](https://www.youtube.com/watch?v=QfbCYoRgE3s&feature=youtu.be)\r\n### Encoding Channel-based Interaction\r\n![](https://dl.dropboxusercontent.com/s/v8w7a1umxjne2w1/channel.png?dl=0)\r\n\r\n\r\n[Source Code](https://github.com/lazkany/AbC/tree/master/org.sysma.abc.core/src/org/sysma/abc/core/Examples/broadcast)      \r\n[Video Demo](https://www.youtube.com/watch?v=VfFOpDV-JSw&feature=youtu.be)\r\n### Modelling Publish/Subscribe framework\r\n![](https://dl.dropboxusercontent.com/s/72r0wd6ot3ujeuh/pubsub.png?dl=0)\r\n[Source Code]\r\n(https://github.com/lazkany/AbC/tree/master/org.sysma.abc.core/src/org/sysma/abc/core/Examples/PublishSubscribe)                 \r\n[Video Demo](https://www.youtube.com/watch?v=Eiil8DkPoqM&feature=youtu.be)\r\n### Modelling Group-based Interaction   \r\n![](https://dl.dropboxusercontent.com/s/hrlfdvqs27f8kl5/group.png?dl=0)\r\n[Source Code](https://github.com/lazkany/AbC/tree/master/org.sysma.abc.core/src/org/sysma/abc/core/Examples/GroupBased)      \r\n[Video Demo](https://www.youtube.com/watch?v=3xlWubbXjTM&feature=youtu.be)\r\n### Contributors to the Implementation\r\nYehia Abd Alrahman                                                                                                     \r\nyehia.abdalrahman@imtlucca.it                                                                                            \r\nIMT Lucca for Advanced Studies                                                                                         \r\n@lazkany\r\n\r\n\r\n***\r\n\r\n\r\nMichele Loreti                                                                                                              \r\nmichele.loreti@unifi.it                                                                                                   \r\nUniversit\u0012a degli Studi di Firenze                                                                                      \r\n@michele-loreti\r\n### Support or Contact\r\nHaving trouble with with installation or programming? Please contact either @lazkany or @michele-loreti","google":"UA-73372050-1","note":"Don't delete this file! It's used internally to help with page regeneration."}